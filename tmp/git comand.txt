pwd где находишься

git clone https://github.com/stan-nikola/....... .git

git add .

git commit -m "commit desc"

git remote add origin https://github.com/stan-nikola/..... .git подвязать 

git remote -v - узнать кака ветка
git init инициилизировать
git push origin main

Список корисних команд для роботи з git
git clone - копіює репозиторій(папку з файлами) на компютер
git branch "branchName" - створює гілку з назвою "branchName"
git checkout "branchName" - переходить на гілку з назвою "branchName"
git checkout -b "branchName" - створюємо гілку з назвою "branchName" і переходимо на неї
git add . - зберігаємо зміни в файлах
git commit -m "commit message" - підписуємо збереженні зміни в файлах
git push - відправляємо зміни на сайт github
git pull - отримуємо останні зміни з сайту github
git status - показуємо статус проекту
git branch - показуємо список гілок в проекті
git branch -r - показуємо список гілок на сайті github
git branch -a - показуємо список гілок на компютері та на сайті github
git fetch - отримуємо зміни з сайту github
git stash - зберігаємо не збережені зміни в файлах і кладемо їх в буфер обміну
git stash apply - вставляємо збережені зміни з буфера обміну
git merge "banchName" - зливаємо гілку з назвою "branchName" в поточну гілку
git merge --abort - відміняємо зливання гілок
git branch -d branchName - видаляє гілку локально з проекту
git push origin --delete name - видаляє гілку з сайту github
git diff - показує відрізки рядків між двома версіями файлу (між двома комітами)
git log - показує історію комітів
cd gitTutorial - переходимо в папку gitTutorial
Для того щоб вийти з режиму перегляду комітів використовуйте клавішу q (стосується команди №20 і №21)






J99RtR4HI0YXe3MN mongo


// const { Contact } = require("../../models");

// const idValidation = async (req, res, next) => {
//   const contacts = await Contact.find({});
//   const isIdInContacts = contacts.every(
//     (item) => item.id !== req.params.contactId
//   );
//   if (isIdInContacts) return res.status(400).json({ message: "Not found" });
//   next();
// };

// module.exports = { idValidation };
